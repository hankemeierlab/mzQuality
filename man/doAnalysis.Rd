% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Metrics.R
\name{doAnalysis}
\alias{doAnalysis}
\title{Perform the main analysis of mzQuality}
\usage{
doAnalysis(
  exp,
  removeBadCompounds = FALSE,
  removeOutliers = FALSE,
  useWithinBatch = FALSE,
  effectNaAsZero = FALSE,
  concentrationType = "ACAL",
  backgroundPercentage = 40,
  qcPercentage = 80,
  nonReportableRSD = 30
)
}
\arguments{
\item{exp}{A SummarizedExperiment object containing the experimental data.}

\item{removeBadCompounds}{Logical, whether to remove compounds that do not
meet usability thresholds. Defaults to `FALSE`.}

\item{removeOutliers}{Logical, whether to remove outliers during batch
correction. Defaults to `FALSE`.}

\item{useWithinBatch}{Logical, whether to use within-batch correction.
Defaults to `FALSE`.}

\item{effectNaAsZero}{Logical, whether to treat missing values as zero
during background signal estimation. Defaults to `FALSE`.}

\item{concentrationType}{A string specifying the concentration type to use
for calculations. Defaults to `"ACAL"`.}

\item{backgroundPercentage}{Numeric, the maximum allowable percentage of
background signal. Defaults to 40.}

\item{qcPercentage}{Numeric, the minimum percentage of QC presence
required. Defaults to 80.}

\item{nonReportableRSD}{Numeric, the maximum allowable RSDQC for compounds
to be considered usable. Defaults to 30.}
}
\value{
A SummarizedExperiment object with added assays and metadata
    reflecting the analysis results.
}
\description{
Executes the main analysis pipeline for mzQuality, including
    batch correction, RSDQC calculation, background signal estimation, and
    internal standard suggestion.
}
\details{
This function validates the input SummarizedExperiment object and
    performs a series of analyses, including ratio calculation, batch
    correction, background signal estimation, and RSDQC calculation. If
    concentration data is available, it also calculates concentrations and
    applies additional corrections. The function can optionally filter out
    bad compounds and outliers.
}
\examples{
# Read data
path <- system.file("extdata", "example.tsv", package = "mzQuality")
exp <- buildExperiment(readData(path))

# Do Analysis
exp <- doAnalysis(exp)
}
